/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

package mozilla.components.service.glean.utils

import java.lang.StringBuilder
import java.text.SimpleDateFormat
import java.util.Date
import java.util.Locale

internal const val DATE_FORMAT_PATTERN = "yyyy-MM-dd'T'HH:mmZ"

/**
 * Generate an ISO8601 compliant time string for the current time.
 *
 * @param date the [Date] object to convert to string
 * @return a string containing the date and time.
 */
internal fun getISOTimeString(date: Date): String {
    val dateFormat = SimpleDateFormat(DATE_FORMAT_PATTERN, Locale.US)
    val timeString = StringBuilder(dateFormat.format(Date()))

    // Due to limitations of SDK version 21, there isn't a way to properly output the time
    // offset with a ':' character:
    // 2018-12-19T12:36-0600    --  This is what we get
    // 2018-12-19T12:36-06:00   -- This is what GCP will expect
    //
    // In order to satisfy time offset requirements of GCP, we manually insert the ":"
    timeString.insert(timeString.length - 2, ":")

    return timeString.toString()
}

/**
 * Parses an ISO8601 compliant time string for the current time.
 *
 * @param date a [String] representing an ISO date string generated by [getISOTimeString]
 * @return a [Date] object representation of the provided string
 */
internal fun parseISOTimeString(date: String): Date? {
    val dateFormat = SimpleDateFormat(DATE_FORMAT_PATTERN, Locale.US)
    return try {
        dateFormat.parse(date)
    } catch (e: java.text.ParseException) {
        null
    }
}
