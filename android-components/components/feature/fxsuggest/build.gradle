/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    repositories {
        maven {
            url "https://maven.mozilla.org/maven2"
        }
    }

    dependencies {
        classpath "${ApplicationServicesConfig.groupId}:tooling-nimbus-gradle:${ApplicationServicesConfig.version}"
    }
}

plugins {
    id "com.jetbrains.python.envs" version "$python_envs_plugin"
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    defaultConfig {
        minSdkVersion config.minSdkVersion
        compileSdk config.compileSdkVersion
        targetSdkVersion config.targetSdkVersion
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    namespace 'mozilla.components.feature.fxsuggest'
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions.freeCompilerArgs += '-opt-in=kotlin.ExperimentalUnsignedTypes'
}

dependencies {
    api ComponentsDependencies.mozilla_appservices_suggest

    implementation project(':browser-state')
    implementation project(':concept-awesomebar')
    implementation project(':concept-engine')
    implementation project(':feature-session')
    implementation project(':service-nimbus')
    implementation project(':support-base')
    implementation project(':support-ktx')

    implementation ComponentsDependencies.androidx_work_runtime
    implementation ComponentsDependencies.kotlin_coroutines

    testImplementation project(':support-test')

    testImplementation ComponentsDependencies.androidx_test_core
    testImplementation ComponentsDependencies.androidx_test_junit
    testImplementation ComponentsDependencies.androidx_work_testing
    testImplementation ComponentsDependencies.mozilla_appservices_full_megazord_forUnitTests
    testImplementation ComponentsDependencies.testing_coroutines
    testImplementation ComponentsDependencies.testing_robolectric
}

apply from: '../../../android-lint.gradle'
apply from: '../../../publish.gradle'
apply plugin: "org.mozilla.appservices.nimbus-gradle-plugin"
nimbus {
    // The path to the Nimbus feature manifest file
    manifestFile = "fxsuggest.fml.yaml"

    channels = [
        debug: "debug",
        release: "release",
    ]

    applicationServicesDir = gradle.hasProperty('localProperties.autoPublish.application-services.dir')
        ? gradle.getProperty('localProperties.autoPublish.application-services.dir') : null
}
ext.configurePublish(config.componentsGroupId, archivesBaseName, project.ext.description)
